{"name":"Sheroku","tagline":"launch database/application shells using heroku environment variables","body":"# sheroku\r\n\r\n## Installation instructions\r\n\r\nCopy this into your terminal and hit enter:\r\n```sh\r\ncurl -s https://raw.github.com/mchail/sheroku/master/install.sh | sh\r\n```\r\n\r\n## What does it do?\r\n\r\nYou really should have asked that question before installing it. `sheroku` helps you launch shell clients (as of the initial release for mongo and redis) using your heroku environment variables. This way, you can have quick, easy access to your database shells without keeping any passwords in plaintext in your `.aliases`, `.bashrc`, or code repositories.\r\n\r\n## Usage\r\n\r\n1. `cd` into a heroku app directory\r\n2. type `sheroku mongo` or `sheroku redis`\r\n\r\nAssuming you have the [heroku toolbelt](https://toolbelt.heroku.com/) installed, your heroku environment variables will be automatically parsed, and a shell started. Several options are available if you need to alter the connection string. Type `sheroku`, without any options, to see the help information.\r\n\r\n## Supported consoles\r\n\r\n- mongo\r\n- redis\r\n- amazon rds (using the keyword rds, as in `sheroku rds`)\r\n\r\n## Security\r\n\r\nIt's a bad idea to use this in a coffee shop. Your redis/mongo shell connections are probably made over unencrypted traffic. If you must connect while on a public network, first ssh into a remote terminal (to a more trusted traffic origin), and connect from there.\r\n\r\n2013 / Steve McHail  \r\nLICENSE: [WTFPL](http://en.wikipedia.org/wiki/WTFPL)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}